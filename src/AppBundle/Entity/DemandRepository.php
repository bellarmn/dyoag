<?php

namespace AppBundle\Entity;

/**
 * DemandRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DemandRepository extends \Doctrine\ORM\EntityRepository
{
    //les actions de dashboard
     public function getDashboardCountBrouillons($user) {
        return $this->createQueryBuilder('d')
                        ->select('COUNT(d)')
                       ->where('d.user  =:user')
                       ->andwhere('d.published  =:published')
                       ->andwhere('d.deleted  =:deleted')
                       ->andwhere('d.canceled  =:canceled')
                       ->andwhere('d.available  =:available')
                       ->setParameter('user', $user)
                       ->setParameter('published', false)
                       ->setParameter('available', true)
                       ->setParameter('deleted', false)
                       ->setParameter('canceled', false)
                        ->getQuery()
                        ->getSingleScalarResult();
    }
    
     public function getDashboardCountPulibes($user) {
        return $this->createQueryBuilder('d')
                        ->select('COUNT(d)')
                       ->where('d.user  =:user')
                       ->andwhere('d.published  =:published')
                       ->andwhere('d.deleted  =:deleted')
                       ->andwhere('d.canceled  =:canceled')
                       ->andwhere('d.available  =:available')
                       ->setParameter('user', $user)
                       ->setParameter('published', true)
                       ->setParameter('available', true)
                       ->setParameter('deleted', false)
                       ->setParameter('canceled', false)
                        ->getQuery()
                        ->getSingleScalarResult();
    }
    
     public function getDashboardCountResolus($user) {
        return $this->createQueryBuilder('d')
                        ->select('COUNT(d)')
                       ->where('d.user  =:user')
                       ->andwhere('d.published  =:published')
                       ->andwhere('d.deleted  =:deleted')
                       ->andwhere('d.canceled  =:canceled')
                       ->andwhere('d.available  =:available')
                       ->setParameter('user', $user)
                       ->setParameter('published', false)
                       ->setParameter('available', false)
                       ->setParameter('deleted', false)
                       ->setParameter('canceled', false)
                        ->getQuery()
                        ->getSingleScalarResult();
    }
    
     public function getDashboardCountExpires($user) {
        return $this->createQueryBuilder('d')
                        ->select('COUNT(d)')
                       ->where('d.user  =:user')
                      // ->andwhere('d.published  =:published')
                       ->andwhere('d.deleted  =:deleted')
                       ->andwhere('d.canceled  =:canceled')
                       ->andwhere('d.available  =:available')
                       ->andwhere('d.dateLimit  <= :datedujour')
                       ->setParameter('user', $user)
                     //  ->setParameter('published', false)
                       ->setParameter('available', true)
                       ->setParameter('deleted', false)
                       ->setParameter('canceled', false)
                       ->setParameter('datedujour', new \DateTime())
                        ->getQuery()
                        ->getSingleScalarResult();
    }
    
     public function getDashboardExpires($user) {
        return $this->createQueryBuilder('d')
                       ->where('d.user  =:user')
                      // ->andwhere('d.published  =:published')
                       ->andwhere('d.deleted  =:deleted')
                       ->andwhere('d.canceled  =:canceled')
                       ->andwhere('d.available  =:available')
                       ->andwhere('d.dateLimit  <= :datedujour')
                       ->setParameter('user', $user)
                     //  ->setParameter('published', false)
                       ->setParameter('available', true)
                       ->setParameter('deleted', false)
                       ->setParameter('canceled', false)
                       ->setParameter('datedujour', new \DateTime())
                ->getQuery()->getResult();
    }
       
     public function getDashboardCountCorbeille($user) {
        return $this->createQueryBuilder('d')
                        ->select('COUNT(d)')
                        ->where('d.user  =:user')
                        ->andwhere('d.published  =:published')
                        ->andwhere('d.deleted  =:deleted')
                        ->andwhere('d.canceled  =:canceled')
                        ->andwhere('d.available  =:available')
                        ->setParameter('user', $user)
                        ->setParameter('published', false)
                        ->setParameter('available', true)
                        ->setParameter('deleted', false)
                        ->setParameter('canceled', true)
                        ->getQuery()
                        ->getSingleScalarResult();
    }
    
}
